// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.OperationalInsights
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for TablesOperations.
    /// </summary>
    public static partial class TablesOperationsExtensions
    {
            /// <summary>
            /// Sets a Log Analytics workspace table properties.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Gets subscription credentials which uniquely identify Microsoft Azure
            /// subscription. The subscription ID forms part of the URI for every service
            /// call.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group to get. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace.
            /// </param>
            /// <param name='tableName'>
            /// The name of the table.
            /// </param>
            /// <param name='retentionInDays'>
            /// The data table data retention in days, between 30 and 730. Setting this
            /// property to null will default to the workspace retention.
            /// </param>
            public static Table CreateOrUpdate(this ITablesOperations operations, string subscriptionId, string resourceGroupName, string workspaceName, string tableName, int? retentionInDays = default(int?))
            {
                return operations.CreateOrUpdateAsync(subscriptionId, resourceGroupName, workspaceName, tableName, retentionInDays).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Sets a Log Analytics workspace table properties.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Gets subscription credentials which uniquely identify Microsoft Azure
            /// subscription. The subscription ID forms part of the URI for every service
            /// call.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group to get. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace.
            /// </param>
            /// <param name='tableName'>
            /// The name of the table.
            /// </param>
            /// <param name='retentionInDays'>
            /// The data table data retention in days, between 30 and 730. Setting this
            /// property to null will default to the workspace retention.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Table> CreateOrUpdateAsync(this ITablesOperations operations, string subscriptionId, string resourceGroupName, string workspaceName, string tableName, int? retentionInDays = default(int?), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(subscriptionId, resourceGroupName, workspaceName, tableName, retentionInDays, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets a Log Analytics workspace table.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Gets subscription credentials which uniquely identify Microsoft Azure
            /// subscription. The subscription ID forms part of the URI for every service
            /// call.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group to get. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace.
            /// </param>
            /// <param name='tableName'>
            /// The name of the table.
            /// </param>
            public static Table Get(this ITablesOperations operations, string subscriptionId, string resourceGroupName, string workspaceName, string tableName)
            {
                return operations.GetAsync(subscriptionId, resourceGroupName, workspaceName, tableName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets a Log Analytics workspace table.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Gets subscription credentials which uniquely identify Microsoft Azure
            /// subscription. The subscription ID forms part of the URI for every service
            /// call.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group to get. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace.
            /// </param>
            /// <param name='tableName'>
            /// The name of the table.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Table> GetAsync(this ITablesOperations operations, string subscriptionId, string resourceGroupName, string workspaceName, string tableName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(subscriptionId, resourceGroupName, workspaceName, tableName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
