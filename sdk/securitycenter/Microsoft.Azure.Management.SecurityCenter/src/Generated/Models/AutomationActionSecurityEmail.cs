// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Security.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// An action that triggers sending of Security emails. Emails can be sent
    /// to users with specific roles on the subscription (for example,
    /// subscription owners) or to user-provided emails.
    /// </summary>
    [Newtonsoft.Json.JsonObject("SecurityEmail")]
    public partial class AutomationActionSecurityEmail : AutomationAction
    {
        /// <summary>
        /// Initializes a new instance of the AutomationActionSecurityEmail
        /// class.
        /// </summary>
        public AutomationActionSecurityEmail()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AutomationActionSecurityEmail
        /// class.
        /// </summary>
        /// <param name="subscriptionRbacRoles">A list of user roles which
        /// indicate the relevant users that will receive the event data via
        /// email.</param>
        /// <param name="emailAddresses">A list of email addresses that should
        /// receive the event data.</param>
        public AutomationActionSecurityEmail(IList<string> subscriptionRbacRoles = default(IList<string>), IList<string> emailAddresses = default(IList<string>))
        {
            SubscriptionRbacRoles = subscriptionRbacRoles;
            EmailAddresses = emailAddresses;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets a list of user roles which indicate the relevant users
        /// that will receive the event data via email.
        /// </summary>
        [JsonProperty(PropertyName = "subscriptionRbacRoles")]
        public IList<string> SubscriptionRbacRoles { get; set; }

        /// <summary>
        /// Gets or sets a list of email addresses that should receive the
        /// event data.
        /// </summary>
        [JsonProperty(PropertyName = "emailAddresses")]
        public IList<string> EmailAddresses { get; set; }

    }
}
